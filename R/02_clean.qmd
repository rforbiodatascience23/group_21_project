---
title: "02_clean"
format: html
editor: visual
---

### Load Tidyverse

```{r}
#| include: false
library("tidyverse")
```

### Read Data

```{r}
#| message: false
#| warning: false
full_data <- read_tsv("./../data/01_dat_load.tsv",
                      show_col_types = FALSE)
```

### Split Data

We have extracted one column (sample_tags) that contains comma-separated values into its own dataframe. This allows us to perform separate cleaning operations on it while showcasing our proficiency in joining dataframes.

```{r}
patient_data <- full_data |>
  select(sample_name, sample_tags)

meta_data <- full_data |>
  select(!sample_tags)
```

### Clean Data

```{r}
patient_data <- patient_data |>
  mutate(
    case_control = case_when(
    str_detect(string = sample_tags,
               pattern = "Case") ~ "Case",
    str_detect(string = sample_tags,
               pattern = "Control") ~ "Control",
    TRUE ~ NA),
    
    id = case_when(
      str_detect(string = sample_tags,
                 pattern = "Subject") ~ as.double(
                   str_extract(string = sample_tags,
                               pattern = "(?<=Subject[^,])\\d+")),
      
      str_detect(string = sample_tags,
                 pattern = "Control") ~ as.double(
                   str_extract(string = sample_tags,
                               pattern = "(?<=Control[^,])\\d+")),
      TRUE ~ NA),
    
    timepoint = as.double(
      str_extract(string = sample_tags,
                  pattern = "(?<=Timepoint)\\s+\\d+[.\\d+]?")),
    
    gender = case_when(str_detect(string = sample_tags,
                                  pattern = "Female") ~ "Female",
                       str_detect(string = sample_tags,
                                  pattern = "Male") ~ "Male"),
    
    ethnicity = case_when(str_detect(string = sample_tags,
                                     pattern = "Non-Hispanic") ~ "Non-Hispanic",
                          str_detect(string = sample_tags,
                                     pattern = "Hispanic") ~ "Hispanic",
                          TRUE ~ as.character(sample_tags)),
    
    race = case_when(str_detect(string = sample_tags,
                                pattern = "Caucasian") ~ "Caucasian",
                     str_detect(string = sample_tags,
                                pattern = "Asian") ~ "Asian",
                     TRUE ~ as.character(sample_tags)),
    
    age = round(ifelse(
                      is.na(as.double(str_extract(string = sample_tags,
                                                  pattern = "\\d+(?=\\s+(Years)\\,)"))),
                      (1/12)*as.double(str_extract(string = sample_tags,
                                                   pattern = "\\d+(?=\\s+(Months)\\,)")),
                      as.double(str_extract(string = sample_tags,
                                            pattern = "\\d+(?=\\s+(Years)\\,)"))),
                digits = 2),
    
    age_diagnosis = as.double(
      str_extract(string = sample_tags,
                  pattern = "\\d*\\.\\d+(?=\\sYears\\sat\\sdiagnosis)")),
    
    age_visit = as.double(
      str_extract(string = sample_tags,
                  pattern = "\\d+(?=\\sYears\\sat\\svisit)")),
    
    GAD65 = as.double(
      str_extract(string = sample_tags,
                  pattern = "(?<=GAD65\\s)\\d+")),
    
    IA_2 = as.double(
      str_extract(string = sample_tags,
                  pattern = "(?<=IA\\-2\\s)\\d+")),
    
    IAA = as.double(
      str_extract(string = sample_tags,
                  pattern = "(?<=IAA )[-+]?[0-9]*\\.?[0-9]+")),
    
    ZnT8 = as.double(
      str_extract(string = sample_tags,
                  pattern = "(?<=ZnT8\\s)\\d+\\.\\d+"))
        
    ) |> 
  
  mutate(
    HLA_A = str_extract_all(string = sample_tags,
                            pattern = "(?<=HLA\\-{1}A\\*{1})\\d{4}"),

    HLA_B = str_extract_all(string = sample_tags,
                            pattern = "(?<=HLA\\-{1}B\\*{1})\\d{4}"),
      
    HLA_C = str_extract_all(string = sample_tags,
                            pattern = "(?<=HLA\\-{1}C\\*{1})\\d{4}"),
      
    HLA_DPA1 = str_extract_all(string = sample_tags,
                               pattern = "(?<=HLA\\-{1}DPA1\\*{1})\\d{4}"),
      
    HLA_DPB1 = str_extract_all(string = sample_tags,
                               pattern = "(?<=HLA\\-{1}DPB1\\*{1})\\d{4}"),
      
    HLA_DQA1 = str_extract_all(string = sample_tags,
                               pattern = "(?<=HLA\\-{1}DQA1\\*{1})\\d{4}"),
      
    HLA_DQB1 = str_extract_all(string = sample_tags,
                               pattern = "(?<=HLA\\-{1}DQB1\\*{1})\\d{4}"),
      
    HLA_DRB1 = str_extract_all(string = sample_tags,
                               pattern = "(?<=HLA\\-{1}A\\*{1})\\d{4}")
    
    )  |>
         
  unnest_wider(col = starts_with("HLA_"),
               names_sep = ",") |> 
  
  select(!sample_tags)

```

### Join Data

```{r}
full_data <- meta_data |>
  inner_join(patient_data,
             by = "sample_name")
```

### Write Data

```{r}
full_data |>
  write_tsv("./../data/02_dat_clean.tsv")
```
